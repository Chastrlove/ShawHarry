swagger: "2.0"
info:
  version: "1.0.0"
  title: "yhxk-api"
  description: "Application related APIs."
host: "localhost:8080"
schemes:
  - "http"
basePath: "/"
produces:
  - "application/json"
tags:
  - name: "user"

paths:
  /user/corps:
    get:
      tags:
        - "user"
      summary: "用户所在企业列表"
      operationId: "userCorps"
      responses:
        "200":
          description: response ok
          schema:
            type: array
            items:
              $ref: "./sysParam.yaml#/definitions/SysParamVo"
        "401":
          description: auth fail
          schema:
            type: "string"
        "403":
          description: access denied
          schema:
            type: "string"
        "599":
          description: error
          schema:
            type: "string"
  /user/list:
    get:
      tags:
        - "user"
      summary: "管理用户列表"
      operationId: "listUser"
      responses:
        "200":
          description: response ok
          schema:
            type: array
            items:
              $ref: "#/definitions/CorpUserVo"
        "401":
          description: auth fail
          schema:
            type: "string"
        "403":
          description: access denied
          schema:
            type: "string"
        "599":
          description: error
          schema:
            type: "string"
  /user/create:
    post:
      tags:
        - "user"
      summary: "用户管理-添加用户"
      operationId: "createUser"
      parameters:
        - in: "body"
          name: "userDto"
          schema:
            $ref: "#/definitions/UserDto"
          required: true
      responses:
        "200":
          description: "response ok 返回新增用户id"
          schema:
            type: "integer"
            format: "int64"
        "401":
          description: auth fail
          schema:
            type: "string"
        "403":
          description: access denied
          schema:
            type: "string"
        "599":
          description: error
          schema:
            type: "string"
  /user/status:
    put:
      tags:
        - "user"
      summary: "企业用户状态变更"
      operationId: "statusChange"
      parameters:
        - in: "body"
          name: "userVo"
          schema:
            $ref: "#/definitions/CorpUserVo"
          required: true
      responses:
        "200":
          description: "response ok 返回用户变更后的状态"
          schema:
            type: "integer"
            format: "int32"
            enum:
              - 1 #启用
              - 2 #禁用
        "401":
          description: auth fail
          schema:
            type: "string"
        "403":
          description: access denied
          schema:
            type: "string"
        "599":
          description: error
          schema:
            type: "string"
  /user/resource:
    post:
      tags:
        - "user"
      summary: "用户授权"
      operationId: "distributeResource"
      parameters:
        - in: "body"
          name: "dto"
          schema:
            $ref: "#/definitions/CorpUserResourceDto"
      responses:
        "200":
          description: "response ok"
        "401":
          description: auth fail
          schema:
            type: "string"
        "403":
          description: access denied
          schema:
            type: "string"
        "599":
          description: error
          schema:
            type: "string"

  /user/reset/password:
    put:
      tags:
        - "user"
      summary: "密码重置"
      operationId: "resetPassword"
      parameters:
        - in: "body"
          name: "resetPasswordDto"
          required: true
          schema:
            $ref: "#/definitions/ResetPasswordDto"
      responses:
        "200":
          description: response ok
          schema:
            type: boolean
        "401":
          description: auth fail
          schema:
            type: "string"
        "403":
          description: access denied
          schema:
            type: "string"
        "599":
          description: error
          schema:
            type: "string"
  /user/forget/password/sms:
    get:
      tags:
        - user
      summary: sendForgetPasswordSms
      operationId: sendForgetPasswordSmsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: mobile
          in: query
          description: 手机号码
          required: true
          type: string
      responses:
        "200":
          description: OK
  /user/forget/password/checkSms:
    get:
      tags:
        - user
      summary: checkForgetPwdSmsCode
      operationId: checkForgetPwdSmsCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: mobile
          in: query
          description: 手机号码
          required: true
          type: string
        - name: verifyCode
          in: query
          description: 验证码
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: boolean
definitions:
  ResetPasswordDto:
    type: "object"
    properties:
      phone:
        type: "string"
      oldPassword:
        type: "string"
        description: "原密码"
      newPassword:
        type: "string"
        description: "新密码"
      confirmPassword:
        type: "string"
        description: "密码确认"
  UserDto:
    type: "object"
    properties:
      realName:
        type: "string"
        description: "用户名称"
      role:
        type: "string"
        description: "角色"
        enum:
          - 1 #管理员
          - 2 #复核员
          - 3 #操作员
      password:
        type: "string"
        description: "密码"
      confirmPassword:
        type: "string"
        description: "密码确认"
      mobile:
        type: "string"
        description: "手机号"
      msgCode:
        type: "string"
        description: "短信验证码"
      idCard:
        type: "string"
        description: "身份证号"
  CorpUserVo:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      realName:
        type: "string"
        description: "用户名称"
      username:
        type: "string"
        description: "用户登录名"
      mobile:
        type: "string"
        description: "用户手机号"
      currentCorpCode:
        type: "string"
        description: "当前企业Code"
      currentCorpName:
        type: "string"
        description: "用户企业名称"
      currentCorpType:
        type: "integer"
        description: "企业类型"
        enum:
          - 1 #平台方
          - 2 #供应链企业
          - 3 #保理商
          - 4 #资金方
          - 5 #保证方
          - 6 #核心企业
          - 7 #成员企业
      status:
        type: "integer"
        format: "int32"
        enum:
          - 1 #启用
          - 2 #禁用
      roles:
        type: "array"
        items:
          type: "integer"
          format: "int32"
  CorpUserResourceDto:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
      resourceIds:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      roles:
        type: "array"
        items:
          type: "integer"
          format: "int32"
